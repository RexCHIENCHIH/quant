
三角加碼法：每次加碼的數量逐步遞減

初始部位：3個單位
第一次加碼：2個單位
第二次加碼：1個單位

--------------------------------------------------------------------------------

倒三角加碼法：隨著每次加碼，單位數量逐漸增加
初始部位：1個單位
第一次加碼：2個單位
第二次加碼：3個單位

////////////////////////////////////////////////////////////////////////////////

//@version=5
strategy(title="三角加碼法",overlay=true, pyramiding=3)

//參數設定
Small_Length = input.int(50, "短均長度")
Mid_Length = input.int(100, "中均長度")
Big_Length = input.int(200, "長均長度")
Source = input.source(close,title="取樣價格")


//計算短均線與長均線
L1 = ta.sma(Source, Small_Length)
L2 = ta.sma(Source, Mid_Length)
L3 = ta.sma(Source, Big_Length)

longCondition0 = ta.crossover(Source, L1)
longCondition1 = ta.crossover(L1, L2)
longCondition2 = ta.crossover(L2, L3)

//進場條件執行
if longCondition0
    strategy.entry("LE0", strategy.long, qty=3)
else if longCondition1
    strategy.entry("LE1", strategy.long, qty=2)
else if longCondition2
    strategy.entry("LE2", strategy.long, qty=1)


//出場條件執行
if L1<L2 and L2<L3
    strategy.close_all("空頭排列全部出場")


plot(L1,"SmallMA",color.yellow)
plot(L2,"MidMA",color.blue)
plot(L3,"BigMA",color.orange)

////////////////////////////////////////////////////////////////////////////////

//@version=5
strategy(title="倒三角加碼法",overlay=true, pyramiding=3)

//參數設定
Small_Length = input.int(50, "短均長度")
Mid_Length = input.int(100, "中均長度")
Big_Length = input.int(200, "長均長度")
Source = input.source(close,title="取樣價格")


//計算短均線與長均線
L1 = ta.sma(Source, Small_Length)
L2 = ta.sma(Source, Mid_Length)
L3 = ta.sma(Source, Big_Length)

longCondition0 = ta.crossover(Source, L1)
longCondition1 = ta.crossover(L1, L2)
longCondition2 = ta.crossover(L2, L3)

//進場條件執行
if longCondition0
    strategy.entry("LE0", strategy.long, qty=1)
else if longCondition1
    strategy.entry("LE1", strategy.long, qty=2)
else if longCondition2
    strategy.entry("LE2", strategy.long, qty=3)


//出場條件執行
if L1<L2 and L2<L3
    strategy.close_all("空頭排列全部出場")


plot(L1,"SmallMA",color.yellow)
plot(L2,"MidMA",color.blue)
plot(L3,"BigMA",color.orange)




















