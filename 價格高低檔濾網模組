
1. 判斷當前價格在歷史價格範圍中的位置，來過濾出符合交易條件的情況
2. 價格的高低檔指的是當前價格在過去一段時間內的高點和低點之間的位置
3. 有助於找出在相對高檔或低檔的位置進行交易的機會
4. 計算這N根K棒中的最高價和最低價的平均值，這個值作為分水嶺

///////////////////////////////////////////////////////////////////////////////

//@version=5
strategy(title="價格高低檔濾網模組",overlay=true)

//每次收K都清空委託單
strategy.cancel_all()

//未平倉的進場價
Entry_Price = strategy.opentrades.entry_price(strategy.opentrades - 1) 

//參數設定
Small_Length = input.int(20, "短均長度")
Big_Length = input.int(50, "長均長度")
Source = input.source(close,title="取樣價格")

//出場參數
SL = input.float(5.0, "停損百分比")  
TP = input.float(5.0, "止盈百分比") 

//短均線、長均線
L1 = ta.sma(Source, Small_Length)
L2 = ta.sma(Source, Big_Length)

//多頭停利停損
Long_SL_Price = Entry_Price * (1 - SL * 0.01)
Long_TP_Price = Entry_Price * (1 + TP * 0.01)  

//濾網計算
Length = input.int(100, "高低檔判斷長度")

//Relative Price相對價格，最近100根K棒的 (最高最+最低價) / 2
RP = (ta.highest(high,Length) + ta.lowest(low,Length)) / 2 

var longFillter = false

if close > RP
    longFillter := true
else
    longFillter := false

//進場條件
longCondition1 = L1 > L2

//進場
if longCondition1 and longFillter
    strategy.entry("LE", strategy.long)

//出場
strategy.exit("Long_TP/SL","LE", limit=Long_TP_Price, stop=Long_SL_Price, comment_profit="TP", comment_loss="SL")

//繪圖
plot(L1,"SmallMA",color.yellow,force_overlay = true)
plot(L2,"BigMA",color.blue,force_overlay = true)
plot(RP,title="Relative Price",color = color.gray)
