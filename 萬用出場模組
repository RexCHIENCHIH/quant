
1. 隨著進場時間的增加或獲利的提高，出場標準會變得更加嚴格，出場標準動態調整
2. 當獲利不高且剛進場時，會給行情較大的活動空間。
3. 隨著時間的推移，標準會逐漸提高，進場時間越長，出場標準越嚴格。
4. 獲利出場方面，獲利越多，出場的速度會更快，根據行情變化進行調整。

////////////////////////////////////////////////////////////////////////////////////////////////////


//@version=5
strategy(title="萬用出場模組",overlay=true)

//每次收K都清空委託單
strategy.cancel_all()

//未平倉的進場價
Entry_Price = strategy.opentrades.entry_price(strategy.opentrades - 1) 

//計算最近一次進場後，圖表上經歷了多少根K棒
Bars_Since_Entry = bar_index - 
 strategy.opentrades.entry_bar_index(strategy.opentrades - 1)

//參數設定
Small_Length = input.int(20, "短均長度")
Big_Length = input.int(50, "長均長度")
Source = input.source(close,title="取樣價格")

//短均線、長均線
L1 = ta.sma(Source, Small_Length)
L2 = ta.sma(Source, Big_Length)

////////////////////////////////////////////////////////////////////////////

//出場參數
SL = input.float(5.0, "停損百分比")  
TP1 = input.float(5.0, "第一目標止盈百分比") 
TP2 = input.float(10.0, "第二目標止盈百分比") 

//K棒數設定出場的時間條件，交易達到多少根K棒後將根據時間出場 
Time_Out_Kbars = input.int(20, "時間出場K棒數")

//停利停損

Long_SL_Price = Entry_Price * (1 - SL * 0.01) 
Long_TP1_Price = Entry_Price * (1 + TP1 * 0.01)  
Long_TP2_Price = Entry_Price * (1 + TP2 * 0.01)  

Short_SL_Price = Entry_Price * (1 + SL * 0.01) 
Short_TP1_Price = Entry_Price * (1 - TP1 * 0.01)
Short_TP2_Price = Entry_Price * (1 - TP2 * 0.01)

//進場條件
longCondition1 = ta.crossover(L1, L2)

// 多單進出場
if LongEntry 
    strategy.entry("LE", strategy.long)

var Long_OutPrice = 0.00

if strategy.position_size > 0 and close >= Long_TP2_Price
    Long_OutPrice := math.max(Long_TP2_Price, ta.lowest(low, Time_Out_Kbars / 4))  
    strategy.exit("LX_TP2", stop=Long_OutPrice, comment="LX_止盈2")

else if strategy.position_size > 0 and close >= Long_TP1_Price
    Long_OutPrice := math.max(Long_TP1_Price, ta.lowest(low, Time_Out_Kbars / 2))  
    strategy.exit("LX_TP1", stop=Long_OutPrice, comment="LX_止盈1")  

else if strategy.position_size > 0 and close < Long_TP1_Price and Bars_SinceEntry <= Time_Out_Kbars
    Long_OutPrice := Long_SL_Price  
    strategy.exit("LX_SL", stop=Long_OutPrice, comment="LX_止損")  

else if strategy.position_size > 0 and Bars_SinceEntry > Time_Out_Kbars and strategy.openprofit >= 0
    Long_OutPrice := math.max(Long_SL_Price,ta.lowest(low, Time_Out_Kbars))  
    strategy.exit("LX_Time", stop=Long_OutPrice, comment="LX_時間")  

else if strategy.position_size > 0 and Bars_SinceEntry > Time_Out_Kbars and
     strategy.openprofit < 0
    Long_OutPrice := low  
    strategy.exit("LX_-Time", stop=Long_OutPrice, comment="LX_時間損")  

else if ta.crossunder(L1,L2)
    strategy.close("LE","LX_死叉")

////////////////////////////////////////////////////////////////////////////

// 空單進出場
if ShortEntry 
    strategy.entry("SE", strategy.short) 

var Short_OutPrice = 0.00

if strategy.position_size < 0 and close <= Short_TP2_Price
    Short_OutPrice := math.max(Short_TP2_Price, ta.highest(high, Time_Out_Kbars / 4))  
    strategy.exit("SX_TP2", stop=Short_OutPrice, comment="SX_止盈2")

else if strategy.position_size < 0 and close <= Short_TP1_Price
    Short_OutPrice := math.max(Short_TP1_Price, ta.highest(high, Time_Out_Kbars / 2))  
    strategy.exit("SX_TP1", stop=Short_OutPrice, comment="SX_止盈1")  

else if strategy.position_size < 0 and close < Short_TP1_Price and Bars_SinceEntry <= Time_Out_Kbars
    Short_OutPrice := Short_SL_Price  
    strategy.exit("SX_SL", stop=Short_OutPrice, comment="SX_止損")  

else if strategy.position_size < 0 and Bars_SinceEntry > Time_Out_Kbars and strategy.openprofit >= 0
    Short_OutPrice := math.max(Short_SL_Price,ta.highest(high, Time_Out_Kbars))  
    strategy.exit("SX_Time", stop=Short_OutPrice, comment="SX_時間")  

else if strategy.position_size < 0 and Bars_SinceEntry > Time_Out_Kbars and
     strategy.openprofit < 0
    Short_OutPrice := high  
    strategy.exit("SX_-Time", stop=Short_OutPrice, comment="SX_時間損")  

else if ta.crossover(L1,L2) 
    strategy.close("SE","SX_金叉")

////////////////////////////////////////////////////////////////////////////

//背景顏色，多頭綠色，空頭紅色，空手灰色
colorBG = strategy.position_size > 0 ? color.new(color.green, 80) :
           strategy.position_size < 0 ? color.new(color.red, 80) :
           color.new(color.gray, 100)

//force_overlay：呈現在主圖
bgcolor(colorBG, force_overlay=true)

//繪圖
plot(L1,"SmallMA",color.yellow,force_overlay = true)
plot(L2,"BigMA",color.blue,force_overlay = true)
plot(OutPrice,"OutPrice",color.gray,style = plot.style_linebr)
